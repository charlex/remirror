parameters:
  name: '' # defaults for any parameters that aren't specified
  vmImage: ''

jobs:
  - ${{ if eq(parameters.name, 'Linux') }}:
      - job: ${{ parameters.name }}Checks
        pool:
          vmImage: ${{ parameters.vmImage }}
        steps:
          - template: pipeline-yarn-install.yml
          - bash: yarn integrity
            displayName: 'Check yarn lock file is up to date'
          - bash: yarn lint
            displayName: 'Check all lint rules'
          - bash: yarn typecheck
            displayName: 'Typecheck code and tests'

  - ${{ if eq(parameters.name, 'Linux') }}:
      - job: ${{ parameters.name }}UnitTests
        pool:
          vmImage: ${{ parameters.vmImage }}
        steps:
          - template: pipeline-yarn-install.yml
          - bash: |
              yarn test
            displayName: 'Run unit tests across project'

  - ${{ if eq(parameters.name, 'Linux') }}:
      - job: ${{ parameters.name }}Build
        pool:
          vmImage: ${{ parameters.vmImage }}
        steps:
          - template: pipeline-yarn-install.yml
          - bash: yarn build
            displayName: 'Build all project dependencies'
          - publish: $(System.DefaultWorkingDirectory)/
            condition: succeeded()
            artifact: Build
            displayName: Create build artifact

  - ${{ if eq(parameters.name, 'Linux') }}:
      - job: ${{ parameters.name }}SizeChecks
        pool:
          vmImage: ${{ parameters.vmImage }}
        dependsOn:
          - LinuxBuild
        steps:
          - template: pipeline-yarn-install.yml
          - template: pipeline-restore-build.yml
          - bash: yarn size
            displayName: 'Check size limits'

  - job: ${{ parameters.name }}ChromeIntegrationTests
    pool:
      vmImage: ${{ parameters.vmImage }}
    dependsOn:
      - LinuxBuild
    steps:
      - checkout: self
        lfs: true
      - ${{ if eq(parameters.name, 'Linux') }}:
          - bash: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
            displayName: 'Increase file watch limit for Linux only'
      - template: pipeline-yarn-install.yml
      - template: pipeline-restore-build.yml
      - bash: yarn test:e2e
        displayName: 'Razzle integration tests'
        env:
          REMIRROR_E2E_SERVER: razzle
      - publish: $(System.DefaultWorkingDirectory)/e2e/__failed-diffs__
        condition: failed()
        artifact: ImageSnapshots

  - ${{ if eq(parameters.name, 'Linux') }}:
      - job: ${{ parameters.name }}PublishCIBuildToNpm
        variables:
          - group: remirror-secrets
        dependsOn:
          - ${{ parameters.name }}Checks
          - ${{ parameters.name }}UnitTests
          - ${{ parameters.name }}SizeChecks
          - macOSChromeIntegrationTests
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/canary')) # Only run on canary
        pool:
          vmImage: ${{ parameters.vmImage }}
        steps:
          - template: pipeline-yarn-install.yml
          - template: pipeline-restore-build.yml
          - bash: echo "//registry.npmjs.org/:_authToken=\${NPM_AUTH_TOKEN}" > .npmrc 2> /dev/null
            displayName: Authenticate npm for lerna
            env:
              NPM_AUTH_TOKEN: $(npmAuthToken)
          - bash: yarn lerna:publish:ci
            displayName: Publish canary build to NPM
            env:
              NPM_AUTH_TOKEN: $(npmAuthToken)
              CI: 'true'
